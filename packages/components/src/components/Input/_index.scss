@import "./__helpers__/mixins";

.input {
  $input-placeholder-clr: $grey-7;
  @extend .flex-row-center-center;
  @extend .body-16;
  color: $grey-10;
  padding: em(10) em(12);
  width: auto;
  height: em(40);
  box-sizing: border-box;
  border: $input-border-width solid $input-border-color;
  border-radius: $input-border-radius;
  flex: none;
  order: 1;
  flex-grow: 0;
  outline: none;
  @include transition-3s("ease-in-out", "", "padding 0s");

  @include input-background();

  &::placeholder {
    color: $input-placeholder-clr;
  }

  @include disabled-classNames {
    @extend .state--disabled;
    @extend .input__disabled--bg;
    color: $grey-8;
  }

  @include hover-classNames() {
    @include input--hover();
  }

  @include focus-classNames() {
    @include input--hover();

    border-color: $primary;
    &:not([placeholder]) {
      &[data-hasfloatingplaceholder="true"] {
        padding-bottom: em(0);

        ~ .input__floating-placeholder {
          @include input__floating-placeholder--focus();
        }
      }
    }
  }

  &__container {
    @extend .flex-column-stretch-flex-start;
    gap: em(4);

    &__field {
      padding: 0;
      width: auto;
      align-self: stretch;
      position: relative;

      &[data-isfloated="true"] {
        .input {
          padding-bottom: em(0);

          &__floating-placeholder {
            @include input__floating-placeholder--focus();
          }
        }
      }
    }

    @include focus-within-classNames() {
      .input__character-limit {
        opacity: 1;
      }

      .input-password__strength-meter-box {
        // Faded, not "full" opacity
        opacity: 0.75;
      }
    }
  }

  &__floating-placeholder {
    @extend .body-16;
    order: 2;
    position: absolute;
    // top: calc(50% - 1rem);
    top: 50%;
    transform: translateY(-50%);
    left: rem(12);
    color: $input-placeholder-clr;
    overflow: hidden;
    white-space: nowrap;
    text-overflow: clip;
    user-select: none;
    pointer-events: none;
    overflow: visible;
    @include transition-3s("ease-in-out");

    @include hover-classNames() {
      cursor: text;
    }
  }

  &__label {
    @extend .medium;
    color: $grey-9;
    align-self: stretch;
    width: auto;

    &__container {
      @extend .flex-row-space-between-flex-end;
      padding: 0;
      height: auto;
      align-self: stretch;
    }
  }

  &__help-text__container {
    @extend .flex-row-flex-end-center;
    gap: em(4);
    color: $grey-7;
    padding: 0;
    flex: none;
    height: auto;
    order: 1;
    flex-grow: 0;
    user-select: none;
    align-self: stretch;

    @include icon-classNames() {
      stroke: $grey-7;
      fill: $grey-7;
    }

    &.second {
      order: 2;
      justify-content: flex-start;
      align-self: center;
      width: auto;
      max-width: 82.5%;
      flex-grow: 1;
      text-align: left;

      &.error {
        color: $error-color;

        @include icon-classNames() {
          stroke: $error-color;
          fill: $error-color;
        }
      }
    }

    &-and-character-limit {
      @extend .flex-row-space-between-center;
      align-self: stretch;
      width: auto;
      gap: em(8);
    }
  }

  &__padding-container {
    padding: 0 rem(4) 0 rem(4);
  }

  &__character-limit {
    @extend .flex-column-flex-start-center;
    @include transition-3s("ease-out");
    order: 2;
    text-align: right;
    opacity: 0;
    color: $grey-7;
    justify-self: flex-end;
    user-select: none;
  }

  &.error {
    @include input--state($error-color);
  }

  &.success {
    @include input--state($success-color);
  }

  &__icon {
    z-index: 1;
    position: absolute;
    top: 50%;
    transform: translateY(-40%);
    color: $grey-9;

    &.left {
      left: 12px;
    }

    &.right {
      right: 12px;
    }
  }
}

.input-password {
  letter-spacing: 0.05em;

  &__strength-meter-box {
    height: 10px;
    width: 10px;
    border-radius: calc(#{$input-border-radius} / 3);
    background: linear-gradient(48deg, $volcano-3 0%, $red-5 77%);
    margin-left: em(6);
    align-self: flex-end;
    opacity: 0;
    @include transition-3s("ease-out");

    &.sm-secure {
      background: linear-gradient(48deg, $volcano-3 0%, $red-5 77%);
    }

    &.md-secure {
      background: linear-gradient(48deg, $volcano-4 0%, $yellow-5 77%);
    }

    &.lg-secure {
      background: linear-gradient(48deg, $green-5 0%, $green-7 77%);
    }
  }
}

.input-multiline {
  height: auto;
  box-sizing: border-box;
  resize: vertical;
  min-height: em(56);

  &:not([placeholder]) {
    padding-top: rem(22);
  }

  @include focus-classNames() {
    padding-bottom: em(10) !important;
  }

  @extend .scrollbar;

  + .input__floating-placeholder {
    width: calc(100% - (1.5rem + 0.5rem));
  }

  + .input__floating-placeholder::before {
    @extend .input__floating-placeholder--pseudo-element;
    top: rem(-4);
    height: rem(4);
  }

  + .input__floating-placeholder::after {
    @extend .input__floating-placeholder--pseudo-element;
    left: 0;
    bottom: rem(-6);
    height: rem(6);
  }
}

.input-digit {
  font-size: rem(36);
  line-height: 150%;
  height: rem(70);
  border-radius: $input-border-radius * 1.5;
  border-width: $input-border-width * 2;
  background-color: $grey-1;
  padding: rem(4);
  justify-content: center;
  align-items: center;
  text-align: center;
  color: $grey-10;

  @include focus-classNames() {
    padding-bottom: rem(4);
  }

  @include disabled-classNames() {
    border: $input-border-width * 2 solid darken($input-disabled-bg, 24) !important;
  }

  &-sequence {
    @extend .flex-column-center-center;
    flex: none;
    width: 100%;
    gap: em(24);

    &__container {
      @extend .input-digit-sequence;
      flex-direction: row;
      gap: em(40);
    }

    .input__help-text__container {
      @extend .body-16;
    }
  }
}

.input-number {
  position: relative;
  min-width: em(120);
  -moz-appearance: textfield;

  &::-webkit-outer-spin-button,
  &::-webkit-inner-spin-button {
    -webkit-appearance: none;
    margin: 0;
  }

  &[data-isbtnshown="true"] {
    padding-right: 1.75em;
  }

  &__btn__container {
    background-color: transparent;
    position: absolute;
    overflow: hidden;
    top: rem(1);
    right: rem(1);
    height: calc(100% - 0.125rem);
    border-radius: 0px 2px 2px 0px;
    border-left: 2px solid $grey-5;
    border-radius: 0 $input-border-radius $input-border-radius 0;

    .btn {
      @extend .flex-column-center-center;
      cursor: pointer;
      background-color: transparent;
      padding: 0;
      width: em(24);
      height: 50%;
      border: none;
      box-shadow: none;
      stroke: $grey-6;

      @include hover-classNames() {
        @include input--hover();
        stroke: $primary;
      }

      &:nth-of-type(1) {
        border-radius: 0px 2px 0px 0px;
      }

      &:nth-of-type(2) {
        border-top: 2px solid $grey-5;
        border-radius: 0px 0px 2px 0px;
      }
    }
  }

  @include disabled-classNames() {
    + .input-number__btn__container {
      border-color: $grey-6;

      .btn:nth-of-type(2) {
        border-color: $grey-6;
      }
    }
  }
}

.input-incr-dcr {
  padding: em(4);
  height: em(28);
  text-align: center;

  &__container {
    @extend .flex-row-center-center;
    padding: 0;
    width: auto;
    height: auto;
    gap: em(16);
  }

  &__btn {
    width: rem(32);
    height: rem(32);
    padding: em(8);
    background-color: lighten($primary, 40);

    @include path-classNames() {
      stroke: $primary;
    }

    @include disabled-classNames() {
      background-color: $grey-4 !important;

      @include path-classNames() {
        stroke: $grey-7 !important;
      }
    }

    &:not([disabled]) {
      @include hover-classNames() {
        background-color: lighten($primary, 30);
      }
    }
  }
}
